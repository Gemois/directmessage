server:
  address: localhost
  port: 8080
spring:
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          ssl:
            trust: "*"
          auth: true
          starttls:
            enable: true
          connection-timeout: 5000
          timeout: 3000
          write-timeout: 5000
    protocol: smtp
    default-encoding: UTF-8
  banner:
    location: classpath:banner.txt
management:
  endpoints:
    web:
      exposure:
        include: "health,info,metrics"
logging:
  level:
    root: INFO
    com.gmoi.directmessage: DEBUG
  file:
    name: logs/chatapp.log

  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

  logback:
    rollingpolicy:
      fileNamePattern: "logs/chatapp-%d{yyyy-MM-dd}.%i.log"
      max-history: 30
      total-size-cap: 10MB

jwt:
  secret-key: ${JWT_SECRET-KEY}
  jwt-expiration: 33333333333333333
  jwt-refresh-expiration: 99999999999999999

aws:
  S3:
    bucket-name: ${AWS_S3_BUCKET_NAME}
  region: ${AWS_REGION}
  access-key-id: ${AWS_ACCESS_KEY_ID}
  secret-access-key: ${AWS_SECRET_ACCESS_KEY}

general:
  messages:
    delete-minutes: 5
    edit-minutes: 5
  users:
    admin:
      email: ${GENERAL_USERS_ADMIN_EMAIL}
      password: ${GENERAL_USERS_ADMIN_PASSWORD}
    status:
      inactive-threshold-minutes: 30
    confirmation-token:
      expiration-minutes: 15